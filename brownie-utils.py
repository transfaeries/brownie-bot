import tweepy
import pluralkit
import os
import logging
import asyncio
import openai
import discord

pk = pluralkit.Client(os.environ('PK_TOKEN',""))
openai.api_key = os.environ.get("OPENAI_API_KEY","")
# log_level=os.environ.get('LOG_LEVEL' ,"INFO")
logging.basicConfig(level=logging.INFO)

class Utils:
    def __init__(self) -> None:
        pass

    async def pk_switch(self):

        time,front = await pk.get_fronters()
        if front is None:
            front = "no one"
        logging.info(f"{time}: {front} is in front to start with")

        members = pk.get_members()
        async for member in members:
            logging.info(f"{member.name} (`{member.id}`)")

    async def generate_shitpost(self, ctx:discord.Message) -> str:
            prompt = (
                "An AI has been trained on all the shitposters of weird twitter. This bot can generate incredible shitposts. \n"
                f"This is a shitpost generated by the bot: {ctx.content}"
            )
            response = openai.Completion.create(  # type: ignore
                engine="davinci",
                prompt=prompt,
                temperature=0.9,
                max_tokens=140,
                top_p=1,
                frequency_penalty=0.0,
                presence_penalty=0.6,
                stop=["\n"],
            )
            return response["choices"][0]["text"].strip()

# loop = asyncio.get_event_loop()
# loop.run_until_complete(main())